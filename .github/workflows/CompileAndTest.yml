name: Compile and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: "Test"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-24.04, windows-2022 ]
        c_compiler: [ cl, clang, gcc ]
        build_type: [ Debug, Develop, Release ]
        include:
          - os: windows-2022
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-24.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-24.04
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-2022
            c_compiler: gcc
          - os: windows-2022
            c_compiler: clang
          - os: ubuntu-24.04
            c_compiler: cl

    steps:
    - name: Set up CMake
      uses: lukka/get-cmake@latest
      if: ${{ matrix.os != 'windows-2022' }}

    - name: Set up Visual Studio
      uses: egor-tensin/vs-shell@master
      if: ${{ matrix.os == 'windows-2022' }}

    - name: Checkout
      uses: actions/checkout@master

    - name: Environment
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/Build" >> "$GITHUB_OUTPUT"

    - name: Configure
      run: >
        cmake
        -G Ninja
        -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.build_type }}-${{ matrix.os }}-${{ matrix.c_compiler }}
        path: |
          ${{ steps.strings.outputs.build-output-dir }}
          !*/CMakeLists/

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: >
        ctest
        --test-dir Tests
        --output-on-failure
        --verbose
