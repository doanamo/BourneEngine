name: Compile and Test

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.idea/**'
      - 'CMakeSettings.json'
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '.idea/**'
      - 'CMakeSettings.json'
      - '**.md'

jobs:
  build:
    name: "Test"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-24.04, windows-2022 ]
        c_compiler: [ cl, clang, gcc ]
        build_type: [ Debug, Develop, Release ]
        include:
          - os: windows-2022
            c_compiler: cl
            cpp_compiler: cl
            linker: MSVC
            ar: lib
          - os: ubuntu-24.04
            c_compiler: gcc
            cpp_compiler: g++
            linker: BFD
            ar: ar
          - os: ubuntu-24.04
            c_compiler: clang
            cpp_compiler: clang++
            linked: LLD
            ar: llvm-ar
        exclude:
          - os: windows-2022
            c_compiler: gcc
          - os: windows-2022
            c_compiler: clang
          - os: ubuntu-24.04
            c_compiler: cl

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup Visual Studio
      uses: egor-tensin/vs-shell@master
      if: ${{ matrix.os == 'windows-2022' }}

    - name: Setup Vulkan
      uses: humbletim/setup-vulkan-sdk@main
      with:
        vulkan-query-version: 1.3.296.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Setup Linux
      if: ${{ matrix.os == 'ubuntu-24.04' }}
      run: |
        sudo apt update
        sudo apt install -y llvm
        sudo apt install -y libx11-dev

    - name: Environment
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/Build" >> "$GITHUB_OUTPUT"

    - name: Configure
      run: >
        cmake
        -S ${{ github.workspace }}
        -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
      #  -DCMAKE_LINKER_TYPE=${{ matrix.linker }}
      #  -DCMAKE_AR=${{ matrix.ar }}

    - name: Build
      run: >
        cmake
        --build ${{ steps.strings.outputs.build-output-dir }}
        --config ${{ matrix.build_type }}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.build_type }}-${{ matrix.os }}-${{ matrix.c_compiler }}
        path: |
          ${{ steps.strings.outputs.build-output-dir }}
          !**/CMakeFiles/**
          !**/*.dir/**

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: >
        ctest
        --test-dir Tests
        --build-config ${{ matrix.build_type }}
        --output-on-failure
        --verbose
